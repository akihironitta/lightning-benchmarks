name: Benchmark

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  # schedule:
    # cron: '0 1,9,17 * * *' in JST (UTC+9:00)
    # - cron: '0 0,8,16 * * *'
  workflow_dispatch:
    inputs:
      push:
        description: 'Push generated results to gh-pages branch'
        required: false
        default: true
        type: boolean

concurrency:
  group: benchmark
  cancel-in-progress: true

jobs:
  benchmark:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: '0'

    - uses: actions/setup-python@v3
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install -U pip
        # my fork disables git submodule update
        pip install git+https://github.com/akihironitta/asv.git@master

    - name: Cache repository and env
      uses: actions/cache@v3
      with:
        path: |
          .asv/env/
          pytorch-lightning/
        key: asv-env-${{ hashFiles('asv.conf.json') }}
        restore-keys: asv-env-

    - name: Cache datasets
      id: cache-datasets
      uses: actions/cache@v3
      with:
        path: data
        key: asv-datasets-${{ hashFiles('benchmarks/**') }}
        restore-keys: asv-datasets-

    - name: Pull asv results
      run: |
        # Not sure this is the best way to restore previous results to .asv/results from another branch
        git checkout results
        cp -r .asv/results previous_results
        git checkout master
        mkdir -p .asv
        mv previous_results .asv/results

    - name: Run benchmarks
      # Don't run the whole benchmarks on PRs since it takes too long.
      if: ${{ github.event_name != 'pull_request' }}
      # Give 10min for other steps. GitHub Actions allow 360 at the maximum.
      timeout-minutes: 350
      run: |
        asv machine --machine "github-hosted-runner" --yes
        asv run 1.6.0..master $ASV_RUN_OPTIONS
        for pl_hash in $(cat benchmarks/version_list.txt); do
          asv run ${pl_hash}^! $ASV_RUN_OPTIONS --bench YetAnotherBoring
        done
      env:
        ASV_RUN_OPTIONS: "--skip-existing-successful --parallel"

    - name: Run short benchmarks on pull request
      # Run only a small set of benchmarks for sanity check.
      if: github.event_name == 'pull_request'
      run: |
        asv machine --machine "github-hosted-runner" --yes
        # asv run master^! $ASV_RUN_OPTIONS --bench YetAnotherBoring
        # asv run master^! $ASV_RUN_OPTIONS --bench bench_fit.MNIST
        asv run master^! $ASV_RUN_OPTIONS --bench bench_fit.CIFAR
      env:
        ASV_RUN_OPTIONS: "--skip-existing-successful --parallel -v -e"

    - name: Sync results and gh-pages
      # Don't push on PRs
      if: always() && github.event_name != 'pull_request'
      run: |
        git config --global user.name "$GIT_AUTHOR_NAME"
        git config --global user.email "$GIT_AUTHOR_EMAIL"
        # Push new page to `gh-pages` branch
        asv publish
        git fetch origin gh-pages:gh-pages
        asv gh-pages
        # Push new results to `results` branch
        mv .asv/results new_results
        git checkout $GIT_BRANCH_RESULTS
        rm -rf .asv/results
        mv new_results .asv/results
        git add .asv/results
        git commit -m "New results from $(git rev-parse --short $GITHUB_SHA)" && git push origin $GIT_BRANCH_RESULTS || echo "No new results to push :)"
      env:
        GIT_AUTHOR_NAME: ${{ github.actor }}
        GIT_AUTHOR_EMAIL: ${{ github.actor }}@users.noreply.github.com
        GIT_BRANCH_RESULTS: results
